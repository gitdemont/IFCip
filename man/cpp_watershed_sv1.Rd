% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_watershed_sv1}
\alias{cpp_watershed_sv1}
\title{Watershed Transformation SV1}
\source{
MorphoLib plugin for ImageJ presents a Java implementation of the algorithm in  \url{https://github.com/ijpb/MorphoLibJ/blob/master/src/main/java/inra/ijpb/watershed/WatershedTransform2D.java} authored by Ignacio Arganda-Carreras
}
\arguments{
\item{mat, }{a NumericMatrix; a distance transform matrix is expected.}

\item{msk_, }{a NumericMatrix with finite values. Non-finite values will trigger an error. All non 0 values will be interpreted as true.
Default is R_NilValue, for using all 'mat' elements without masking anything.}

\item{connectivity, }{an uint8_t either 4 or 8 describing pixel neighborhood. Default is 8.}

\item{n_lev, }{an unsigned short determining the number of elevation levels. Default is 256, should be at least 2.}

\item{ws_draw, }{a bool; whether to draw watershed lines or not. Default is true.}

\item{ws_dilate}{, an uint8_t controlling watershed line expansion in pixel. Default is 0, for no expansion.
Then, increasing values will expand watershed lines by 2 pixels. This parameter only applies when 'ws_draw' is true.}
}
\value{
an IntegerMatrix.
}
\description{
This function computes the watershed transformation of an image.
}
\details{
adaptation of 'Determining watersheds in digital pictures via flooding simulations' from P. Soille. and L. Vincent.
In Proc. SPIE 1360, Visual Communications and Image Processing '90: Fifth in a Series, (1 September 1990) \url{https://doi:10.1117/12.24211}.
}
\keyword{internal}
