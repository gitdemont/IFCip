% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_watershed_sv2}
\alias{cpp_watershed_sv2}
\title{Watershed Transformation SV2}
\source{
The algorithm is reviewed in 'The Watershed Transform: Definitions, Algorithms and Parallelization Strategies'
from Roerdink, J. B. T. M. and Meijster, A. (2000) in Fundamenta Informaticae, 41, 187-228 \doi{10.3233/FI-2000-411207}
}
\arguments{
\item{mat, }{a NumericMatrix; a distance transform matrix is expected.}

\item{n_lev, }{an unsigned short determining the number of elevation levels. Default is 256, should be at least 2.}

\item{draw_lines, }{a bool; whether to draw watershed lines or not. Default is true.}

\item{kernel, }{a NumericMatrix; the structuring shape determining neighborhood. All non-zero elements will be considered as neighbors (except center).\cr
Default is R_NilValue, resulting in 8-connected pixels neighbors computation.}

\item{invert, }{a bool; whether to fill from basins (lowest values) to peaks (highest values). Default is false.
When 'mat' is the result of the distance transformation of an image, peaks (highest values) represent largest distances from background.
Thus, they are the ones to be filled first; this is the default behavior with 'invert' set to false.}

\item{msk_, }{a NumericMatrix with finite values. Non-finite values will trigger an error. All non 0 values will be interpreted as true.
Default is R_NilValue, for using all 'mat' elements without masking anything.}
}
\value{
an IntegerMatrix.
}
\description{
This function computes the watershed transformation of an image.
}
\details{
adaptation of 'Watersheds in digital spaces: an efficient algorithm based on immersion simulations' from  L. Vincent and P. Soille.
In IEEE Transactions on Pattern Analysis and Machine Intelligence, 13(6):583-598, June 1991.\cr
}
\keyword{internal}
