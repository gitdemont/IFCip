% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_multi_otsu}
\alias{cpp_multi_otsu}
\title{Otsu Multi Thresholding}
\arguments{
\item{img, }{a NumericMatrix.}

\item{msk_, }{a NumericMatrix with finite values. Non-finite values will trigger an error. All non 0 values will be interpreted as true.
Default is R_NilValue, for using all 'img' elements without masking anything.}

\item{n_comp, }{number of components to separate. Default is 2, should be at least 2.\cr
Returned thresholds will be of length n_comp - 1.}

\item{n_lev, }{an unsigned short determining the number of grey levels used for the computation. Default is 256, should be at least 2.
Despite being fast thanks to LUT pre-computation, performance will be highly impacted with large 'n_comp' or 'n_lev' values (typically n_comp = 5 and n_lev = 256).
Alternatively, you can try to decrease 'n_lev' when 'n_comp' needs to be large (e.g. n_comp = 8 and n_lev = 32).}
}
\value{
an NumericVector of threshold(s).
}
\description{
This function determines best threshold(s) according to Otsu's method.
}
\details{
adaptation of 'A Fast Algorithm for Multilevel Thresholding' from L. Ping-Sung, C. Tse-Sheng, and C. Pau-Choo
in Jounal of Information Science and Engineering. 2001(17), 713-727.
\doi{10.6688/JISE.2001.17.5.1}
}
\keyword{internal}
