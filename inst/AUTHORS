This package has been written by Yohann Demont and is released under
the GNU General Public License, Version 3 (ie GPL-3). 
YEAR: 2021
COPYRIGHT HOLDERS: Yohann Demont, Jean-Pierre Marolleau, Loïc Garçon,
                   CHU Amiens
IFCip: An R Package for Imaging Flow Cytometry Image Processing
Copyright (C) 2021 Yohann Demont

--------------------------------------------------------------------------------
hpp_zernike1 and hpp_zernike2 are adapted from File src/features_zernike.c,
scanfill is adapted from File src/floodFill.cpp, and
gaussian and laplacian kernel in makeKernel is adapted from File R/morphology.R
in EBImage R package in its version 3.12.0 available at
https://www.bioconductor.org/packages/2.10/bioc/html/EBImage.html
EBImage was authored by Oleg Sklyar, Gregoire Pau, Mike Smith, Wolfgang Huber,
under LGPL license version 2.1

--------------------------------------------------------------------------------
hpp_convexhull is adapted from Andrew's Monotone Chain Algorithm A. M. Andrew,
'Another Efficient Algorithm for Convex Hulls in Two Dimension', Information
Processing Letters, 9, 1979, pp216-219 reported in M. A. Jayaram, Hasan Fleyeh,
'Convex Hulls in Image Processing: A Scoping Review', American Journal of
Intelligent Systems, Vol. 6 No. 2, 2016, pp. 48-58.

--------------------------------------------------------------------------------
hpp_antipodalpairs is adapted from Computational geometry with the rotating 
calipers authored by Pirzadeh, Hormoz under supervision of Toussaint, Godfried
T. at McGill University. 
Available at https://escholarship.mcgill.ca/concern/theses/fx719p46g

--------------------------------------------------------------------------------
hpp_multi_otsu is adapted from 'A Fast Algorithm for Multilevel Thresholding'
from L. Ping-Sung, C. Tse-Sheng, and C. Pau-Choo. Described in Jounal of 
Information Science and Engineering. 2001(17), Pages 713-727.
Available at https://doi.org/10.6688/JISE.2001.17.5.1

--------------------------------------------------------------------------------
functions in uw.hpp are adapted from 'Efficient 2-D grayscale morphological
transformations with arbitrary flat structuring elements' by E.R. Urbach,
M.H.F. Wilkinson described in IEEE Transactions on Image Processing, 17(1)
January 2008. Pages 1-8.
Available at https://doi.org/10.1109/tip.2007.912582

--------------------------------------------------------------------------------
functions in geodesic.hpp are adapted from 'Morphological grayscale 
reconstruction in image analysis: applications and efficient algorithms' by 
L. Vincent described in IEEE Transactions on Image Processing, 2(2) April 1993.
Pages 176-201.
available at https://doi.org/10.1109/83.217222

--------------------------------------------------------------------------------
hpp_disttrans_1st, hpp_disttrans_manh, hpp_disttrans_eucl are adapted from
'A General Algorithm For Computing Distance Transforms In Linear Time' by
W.H. Hesselink, A. Meijster, J.B.T.M. Roerdink described in  Mathematical
Morphology and its Applications to Image and Signal Processing. February 2002,
Pages 331-340. 
Available at https://doi.org/10.1007/0-306-47025-X_36

--------------------------------------------------------------------------------
hpp_watershed_sv1 uses algorihtm from 'Determining watersheds in digital
pictures via flooding simulations' from P. Soille. and L. Vincent. In Proc.
SPIE 1360, Visual Communications and Image Processing '90: Fifth in a Series,
(1 September 1990) available at https://doi:10.1117/12.24211. The implementation
is adapted from WatershedTransform2D.java authored by Ignacio Arganda-Carreras
in MorphoLib plugin for ImageJ.
Available at https://github.com/ijpb/MorphoLibJ/blob/master/src/main/java/inra/ijpb/watershed/WatershedTransform2D.java

--------------------------------------------------------------------------------
hpp_watershed_sv2 uses algorithm from 'Watersheds in digital spaces: an
efficient algorithm based on immersion simulations' authored by L. Vincent and 
P. Soille described in IEEE Transactions on Pattern Analysis and Machine
Intelligence, June 1991. 13(6):583-598. The implementation is adapted from
review in 'The Watershed Transform: Definitions, Algorithms and Parallelization
Strategies' by Roerdink, J. B. T. M. and Meijster, A. in Fundamenta Informaticae,
2000, 41, Pages 187-228
Available at https://doi.org/10.3233/FI-2000-411207

--------------------------------------------------------------------------------
hpp_ctl is adapted from 'A linear-time component-labeling algorithm using 
contour tracing technique' from F. Chang, C.J. Chen and C.J. Lu. Described in
Computer Vision and Image Understanding Volume 93, Issue 2, February 2004,
Pages 206-220.
Available at https://doi.org/10.1016/j.cviu.2003.09.002

--------------------------------------------------------------------------------
hpp_thinning_zs is adapted from 'A fast parallel algorithm for thinning digital 
patterns' authored by T. Y. Zhang, C. Y. Suen. Described in Communications of
the ACM, March 1984.
Available at https://doi.org/10.1145/357994.358023

--------------------------------------------------------------------------------
hpp_thinning_bst is adapted from 'A new thinning algorithm for binary images'
authored by L. Ben Boudaoud, A. Sider, A. Tari. Described in 3rd international 
conference on control, engineering & information technology, May 2015.
Available at https://doi.org/10.1109/CEIT.2015.7233099